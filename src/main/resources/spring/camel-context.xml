<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Spring Boot StandAlone -->
	<!--camel:sslContextParameters id="MySslContextParameter">
		<camel:keyManagers keyPassword="password">
			<camel:keyStore password="password" resource="src/main/deployments/keys/keystore.jks"/>
		</camel:keyManagers>
		<camel:trustManagers>
			<camel:keyStore password="password" resource="src/main/deployments/keys/truststore.ts"/>
		</camel:trustManagers>
		<camel:serverParameters clientAuthentication="REQUIRE"/>
	</camel:sslContextParameters-->
	
	<!-- Using Property PlaceHolder -->
	<camel:sslContextParameters id="MySslContextParameter">
	<camel:serverParameters clientAuthentication="{{clientAuthentication}}"/>
	<camel:trustManagers>
		<camel:keyStore id="trustsore"
						resource="{{trustStoreParameters.resource}}"
						type="{{trustStoreParameters.type}}"
						provider="{{trustStoreParameters.provider}}"
						password="{{trustStoreParameters.password}}" />
	</camel:trustManagers>
	<camel:keyManagers>
		<camel:keyStore id="keystore"
						resource="{{keyStoreParameters.resource}}"
						type="{{keyStoreParameters.type}}"
						provider="{{keyStoreParameters.provider}}"
						password="{{keyStoreParameters.password}}" />
	</camel:keyManagers>
	</camel:sslContextParameters>
    <!-- End: Spring Boot StandAlone -->

    <!-- OpenShift -->

    <!--camel:sslContextParameters id="MySslContextParameter">
        <camel:keyManagers keyPassword="secret">
            <camel:keyStore resource="/deployments/keys/jboss.keystore.jks" password="secret" />
        </camel:keyManagers>
        <camel:trustManagers>
            <camel:keyStore resource="/deployments/keys/jboss.truststore.jks" password="secret" />
        </camel:trustManagers>
        <camel:serverParameters  clientAuthentication="NONE"/>
    </camel:sslContextParameters-->

    <!-- End: OpenShift -->

	<camelContext id="exampleSsl" streamCache="true" xmlns="http://camel.apache.org/schema/spring">

		<restConfiguration bindingMode="off" component="restlet" port="5117" scheme="https">
			<camel:endpointProperty key="sslContextParameters" value="#MySslContextParameter"/>
		</restConfiguration>

		<rest path="/myexample">
			<get uri="/customers" >
				<to uri="direct:myExample"/>
			</get>
		</rest>

		<route id="rest-get">
			<from uri="direct:myExample"/>
			<log message="This request is handled by this POD: {{env:HOSTNAME}}  "/>
			<setBody>
				<simple>Hey your rest port is working now --> Enjoy your camel #Microservices | POD : {{env:HOSTNAME}} \n</simple>
			</setBody>
		</route>

	</camelContext>

</beans>
